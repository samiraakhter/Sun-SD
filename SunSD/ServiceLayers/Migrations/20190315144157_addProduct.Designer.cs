//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using ServiceLayers.Model;

//namespace ServiceLayers.Migrations
//{
//    [DbContext(typeof(ApplicationDbContext))]
//    [Migration("20190315144157_addProduct")]
//    partial class addProduct
//    {
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128)
//                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//            modelBuilder.Entity("ServiceLayers.Model.Admin", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<Guid>("AdminId");

//                    b.Property<string>("AdminName");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("Email");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("Password");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.Property<string>("UserName");

//                    b.HasKey("Id");

//                    b.ToTable("Admin");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Customer", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("Address");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<Guid>("CustomerId");

//                    b.Property<string>("Email");

//                    b.Property<string>("EnterpriseName");

//                    b.Property<string>("FirstName");

//                    b.Property<int?>("FkSalesManager");

//                    b.Property<int?>("FkSalesManagerNavigationId");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("LastName");

//                    b.Property<string>("MobileNo");

//                    b.Property<string>("PaymentMethod");

//                    b.Property<string>("PhoneNo");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("FkSalesManagerNavigationId");

//                    b.ToTable("Customer");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.GoodsNotes", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("DeliverTo");

//                    b.Property<bool>("IsActive");

//                    b.Property<int>("OrderIdFk");

//                    b.Property<int?>("OrderIdFkNavigationId");

//                    b.Property<string>("OrderStatus");

//                    b.Property<bool>("Packed");

//                    b.Property<bool>("Picked");

//                    b.Property<bool>("Printed");

//                    b.Property<bool>("Shipped");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.Property<string>("Warehouse");

//                    b.HasKey("Id");

//                    b.HasIndex("OrderIdFkNavigationId");

//                    b.ToTable("GoodsNotes");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Inventory", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<double>("Amount");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("DefaultLocation");

//                    b.Property<int?>("InventoryItemFk");

//                    b.Property<int?>("InventoryItemFkNavigationId");

//                    b.Property<int?>("InventoryItemTypeFk");

//                    b.Property<int?>("InventoryItemTypeFkNavigationId");

//                    b.Property<bool>("IsActive");

//                    b.Property<int>("MinimumStockLevel");

//                    b.Property<int>("ReorderQuantity");

//                    b.Property<int>("Unit");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("InventoryItemFkNavigationId");

//                    b.HasIndex("InventoryItemTypeFkNavigationId");

//                    b.ToTable("Inventory");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.InventoryItem", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<int>("InventoryItemCategoryFk");

//                    b.Property<int?>("InventoryItemCategoryFkNavigationId");

//                    b.Property<string>("InventoryItemName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("InventoryItemCategoryFkNavigationId");

//                    b.ToTable("InventoryItem");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.InventoryItemCategory", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("InventoryItemCategoryName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("InventoryItemCategory");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.InventoryItemType", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("InventoryItemTypeName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("InventoryItemType");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Order", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<int?>("CustomerIdFk");

//                    b.Property<int?>("CustomerIdFkNavigationId");

//                    b.Property<bool>("IsActive");

//                    b.Property<bool>("IsConfirmed");

//                    b.Property<DateTime>("OrderDate");

//                    b.Property<int>("ProductIdFk");

//                    b.Property<int?>("ProductIdFkNavigationId");

//                    b.Property<int?>("SalesOrderIdFk");

//                    b.Property<int?>("SalesOrderIdFkNavigationId");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("CustomerIdFkNavigationId");

//                    b.HasIndex("ProductIdFkNavigationId");

//                    b.HasIndex("SalesOrderIdFkNavigationId");

//                    b.ToTable("Order");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.OrderLines", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<int>("OrderIdFk");

//                    b.Property<int?>("OrderIdFkNavigationId");

//                    b.Property<double>("Price");

//                    b.Property<int>("Quantity");

//                    b.Property<string>("Sku");

//                    b.Property<double>("TotalPrice");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("OrderIdFkNavigationId");

//                    b.ToTable("OrderLines");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Price", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<int>("Count");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<double>("Price1");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("Price");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Product", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("Fullfilled");

//                    b.Property<bool>("Instock");

//                    b.Property<bool>("IsActive");

//                    b.Property<bool>("OnHand");

//                    b.Property<int>("ProductCategoryIdFk");

//                    b.Property<string>("ProductImage");

//                    b.Property<string>("ProductName");

//                    b.Property<int>("ProductTypeIdFk");

//                    b.Property<string>("Sku");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.Property<string>("Variants");

//                    b.HasKey("Id");

//                    b.HasIndex("ProductCategoryIdFk");

//                    b.HasIndex("ProductTypeIdFk");

//                    b.ToTable("Product");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductCategory", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("ProductCategoryName");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("ProductCategory");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductInfo", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<bool>("CanBeExpensed");

//                    b.Property<bool>("CanBePurchased");

//                    b.Property<bool>("CanBeSold");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("Ean");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("ModelSku");

//                    b.Property<int>("ProductCategoryIdFk");

//                    b.Property<int?>("ProductCategoryIdFkNavigationId");

//                    b.Property<int>("ProductIdFk");

//                    b.Property<int?>("ProductIdFkNavigationId");

//                    b.Property<string>("ProductImage");

//                    b.Property<string>("ProductName");

//                    b.Property<int>("ProductTypeIdFk");

//                    b.Property<int?>("ProductTypeIdFkNavigationId");

//                    b.Property<string>("Upc");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("ProductCategoryIdFkNavigationId");

//                    b.HasIndex("ProductIdFkNavigationId");

//                    b.HasIndex("ProductTypeIdFkNavigationId");

//                    b.ToTable("ProductInfo");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductOption", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("Name");

//                    b.Property<string>("Option");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("ProductOption");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductSelectedForOrder", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<int>("OrderIdFk");

//                    b.Property<int?>("OrderIdFkNavigationId");

//                    b.Property<int>("ProductIdFk");

//                    b.Property<int?>("ProductIdFkNavigationId");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("OrderIdFkNavigationId");

//                    b.HasIndex("ProductIdFkNavigationId");

//                    b.ToTable("ProductSelectedForOrder");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductType", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("ProductTypeName");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("ProductType");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.PurchaseInvoice", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<double>("Balance");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<DateTime>("DueDate");

//                    b.Property<DateTime>("InvoiceDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<double>("PaidAmount");

//                    b.Property<DateTime>("PaymentDate");

//                    b.Property<string>("PurchaseInvoiceNo");

//                    b.Property<double>("Revenue");

//                    b.Property<string>("Status");

//                    b.Property<int?>("SupplierIdFk");

//                    b.Property<int?>("SupplierIdFkNavigationId");

//                    b.Property<double>("Total");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("SupplierIdFkNavigationId");

//                    b.ToTable("PurchaseInvoice");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.PurchaseOrder", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<DateTime>("OrderDate");

//                    b.Property<string>("PurchaseOrderNo");

//                    b.Property<string>("Reference");

//                    b.Property<double>("Revenue");

//                    b.Property<string>("Status");

//                    b.Property<int?>("SupplierIdFk");

//                    b.Property<int?>("SupplierIdFkNavigationId");

//                    b.Property<double>("Total");

//                    b.Property<string>("Untaxed");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("SupplierIdFkNavigationId");

//                    b.ToTable("PurchaseOrder");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Role", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("RoleName");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("Role");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesInvoice", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<double>("Amount");

//                    b.Property<double?>("AmountDue");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<int?>("CustomerIdFk");

//                    b.Property<int?>("CustomerIdFkNavigationId");

//                    b.Property<string>("CustomerName");

//                    b.Property<double>("Discount");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("ModeOfPayment");

//                    b.Property<string>("NotesToCustomer");

//                    b.Property<DateTime>("PaymentDate");

//                    b.Property<string>("PaymentTerm");

//                    b.Property<string>("PoWono");

//                    b.Property<string>("Product");

//                    b.Property<int>("Quantity");

//                    b.Property<double>("Rate");

//                    b.Property<double>("Revenue");

//                    b.Property<DateTime>("SalesInvoiceDate");

//                    b.Property<string>("SalesInvoiceNo");

//                    b.Property<string>("SalesManagerAssign");

//                    b.Property<int?>("SalesManagerIdFk");

//                    b.Property<int?>("SalesManagerIdFkNavigationId");

//                    b.Property<int?>("SalesOrdernoFk");

//                    b.Property<int?>("SalesOrdernoFkNavigationId");

//                    b.Property<string>("ShippingAndHandling");

//                    b.Property<double>("SubTotal");

//                    b.Property<double>("Tax");

//                    b.Property<double>("Total");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("CustomerIdFkNavigationId");

//                    b.HasIndex("SalesManagerIdFkNavigationId");

//                    b.HasIndex("SalesOrdernoFkNavigationId");

//                    b.ToTable("SalesInvoice");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesManager", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("Address");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("Email");

//                    b.Property<string>("FirstName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("LastName");

//                    b.Property<string>("MobileNo");

//                    b.Property<string>("Password");

//                    b.Property<string>("PhoneNo");

//                    b.Property<int>("RoleIdFk");

//                    b.Property<int?>("RoleIdFkNavigationId");

//                    b.Property<string>("Salary");

//                    b.Property<Guid>("SalesManagerId");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.Property<string>("UserName");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleIdFkNavigationId");

//                    b.ToTable("SalesManager");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesOrder", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("Category");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<int?>("CustomerIdFk");

//                    b.Property<int?>("CustomerIdFkNavigationId");

//                    b.Property<string>("EnterpriseName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("ProductName");

//                    b.Property<double>("Revenue");

//                    b.Property<int?>("SalesManagerIdFk");

//                    b.Property<int?>("SalesManagerIdFkNavigationId");

//                    b.Property<string>("SalesOrderNo");

//                    b.Property<string>("SalesPersonAssign");

//                    b.Property<string>("Status");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.HasIndex("CustomerIdFkNavigationId");

//                    b.HasIndex("SalesManagerIdFkNavigationId");

//                    b.ToTable("SalesOrder");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesPerson", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("Address");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("FirstName");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("LastName");

//                    b.Property<string>("MobileNo");

//                    b.Property<string>("Password");

//                    b.Property<string>("PhoneNo");

//                    b.Property<string>("Salary");

//                    b.Property<Guid>("SalesPersonId");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.Property<string>("UserName");

//                    b.Property<string>("VehicleNo");

//                    b.HasKey("Id");

//                    b.ToTable("SalesPerson");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ShoppingCartViewModel", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("ProductList");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("ShoppingCartViewModel");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Supplier", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("Address");

//                    b.Property<string>("Company");

//                    b.Property<string>("CreatedBy");

//                    b.Property<DateTime>("CreatedDate");

//                    b.Property<string>("Email");

//                    b.Property<bool>("IsActive");

//                    b.Property<string>("MobileNo");

//                    b.Property<string>("PaymentMethod");

//                    b.Property<string>("PhoneNo");

//                    b.Property<Guid>("SupplierId");

//                    b.Property<string>("Suppliername");

//                    b.Property<string>("UpdatedBy");

//                    b.Property<DateTime?>("UpdatedDate");

//                    b.HasKey("Id");

//                    b.ToTable("Supplier");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.User", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

//                    b.Property<string>("FirstName");

//                    b.Property<string>("LastName");

//                    b.Property<byte[]>("PasswordHash");

//                    b.Property<byte[]>("PasswordSalt");

//                    b.Property<string>("Username");

//                    b.HasKey("Id");

//                    b.ToTable("User");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Customer", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.SalesManager", "FkSalesManagerNavigation")
//                        .WithMany("Customer")
//                        .HasForeignKey("FkSalesManagerNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.GoodsNotes", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Order", "OrderIdFkNavigation")
//                        .WithMany("GoodsNotes")
//                        .HasForeignKey("OrderIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Inventory", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.InventoryItem", "InventoryItemFkNavigation")
//                        .WithMany("Inventory")
//                        .HasForeignKey("InventoryItemFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.InventoryItemType", "InventoryItemTypeFkNavigation")
//                        .WithMany("Inventory")
//                        .HasForeignKey("InventoryItemTypeFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.InventoryItem", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.InventoryItemCategory", "InventoryItemCategoryFkNavigation")
//                        .WithMany("InventoryItem")
//                        .HasForeignKey("InventoryItemCategoryFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Order", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Customer", "CustomerIdFkNavigation")
//                        .WithMany("Order")
//                        .HasForeignKey("CustomerIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.Product", "ProductIdFkNavigation")
//                        .WithMany()
//                        .HasForeignKey("ProductIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.SalesOrder", "SalesOrderIdFkNavigation")
//                        .WithMany("Order")
//                        .HasForeignKey("SalesOrderIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.OrderLines", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Order", "OrderIdFkNavigation")
//                        .WithMany("OrderLines")
//                        .HasForeignKey("OrderIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.Product", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.ProductCategory", "ProductCategory")
//                        .WithMany("Product")
//                        .HasForeignKey("ProductCategoryIdFk")
//                        .OnDelete(DeleteBehavior.Cascade);

//                    b.HasOne("ServiceLayers.Model.ProductType", "ProductType")
//                        .WithMany()
//                        .HasForeignKey("ProductTypeIdFk")
//                        .OnDelete(DeleteBehavior.Cascade);
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductInfo", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.ProductCategory", "ProductCategoryIdFkNavigation")
//                        .WithMany("ProductInfo")
//                        .HasForeignKey("ProductCategoryIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.Product", "ProductIdFkNavigation")
//                        .WithMany()
//                        .HasForeignKey("ProductIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.ProductType", "ProductTypeIdFkNavigation")
//                        .WithMany()
//                        .HasForeignKey("ProductTypeIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.ProductSelectedForOrder", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Order", "OrderIdFkNavigation")
//                        .WithMany("ProductSelectedForOrder")
//                        .HasForeignKey("OrderIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.Product", "ProductIdFkNavigation")
//                        .WithMany()
//                        .HasForeignKey("ProductIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.PurchaseInvoice", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Supplier", "SupplierIdFkNavigation")
//                        .WithMany("PurchaseInvoice")
//                        .HasForeignKey("SupplierIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.PurchaseOrder", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Supplier", "SupplierIdFkNavigation")
//                        .WithMany("PurchaseOrder")
//                        .HasForeignKey("SupplierIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesInvoice", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Customer", "CustomerIdFkNavigation")
//                        .WithMany("SalesInvoice")
//                        .HasForeignKey("CustomerIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.SalesManager", "SalesManagerIdFkNavigation")
//                        .WithMany("SalesInvoice")
//                        .HasForeignKey("SalesManagerIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.SalesOrder", "SalesOrdernoFkNavigation")
//                        .WithMany("SalesInvoice")
//                        .HasForeignKey("SalesOrdernoFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesManager", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Role", "RoleIdFkNavigation")
//                        .WithMany("SalesManager")
//                        .HasForeignKey("RoleIdFkNavigationId");
//                });

//            modelBuilder.Entity("ServiceLayers.Model.SalesOrder", b =>
//                {
//                    b.HasOne("ServiceLayers.Model.Customer", "CustomerIdFkNavigation")
//                        .WithMany("SalesOrder")
//                        .HasForeignKey("CustomerIdFkNavigationId");

//                    b.HasOne("ServiceLayers.Model.SalesManager", "SalesManagerIdFkNavigation")
//                        .WithMany("SalesOrder")
//                        .HasForeignKey("SalesManagerIdFkNavigationId");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
